#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 normalPosition_modelspace;

// Output data ; will be interpolated for each fragment.
out vec2 UV;
out vec3 Normal;


// Values that stay constant for the whole mesh.
uniform mat4 MVP;
uniform mat4 V;
uniform mat4 M;
uniform mat4 P;

uniform float time;

void main()
{
	vec3 vertcies = vertexPosition_modelspace;
	vertcies.xyz += normalPosition_modelspace * sin(time);
	gl_Position =  MVP * vec4(vertcies,1);
	
	
}
